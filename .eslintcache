[{"/home/ec2-user/environment/reactJS/dabit3-postgram/src/index.js":"1","/home/ec2-user/environment/reactJS/dabit3-postgram/src/App.js":"2","/home/ec2-user/environment/reactJS/dabit3-postgram/src/serviceWorker.js":"3","/home/ec2-user/environment/reactJS/dabit3-postgram/src/aws-exports.js":"4","/home/ec2-user/environment/reactJS/dabit3-postgram/src/Posts.js":"5","/home/ec2-user/environment/reactJS/dabit3-postgram/src/Post.js":"6","/home/ec2-user/environment/reactJS/dabit3-postgram/src/Header.js":"7","/home/ec2-user/environment/reactJS/dabit3-postgram/src/CreatePost.js":"8","/home/ec2-user/environment/reactJS/dabit3-postgram/src/Button.js":"9","/home/ec2-user/environment/reactJS/dabit3-postgram/src/graphql/queries.js":"10","/home/ec2-user/environment/reactJS/dabit3-postgram/src/graphql/mutations.js":"11"},{"size":602,"mtime":1609060295954,"results":"12","hashOfConfig":"13"},{"size":2687,"mtime":1609060295954,"results":"14","hashOfConfig":"13"},{"size":5086,"mtime":1609060295954,"results":"15","hashOfConfig":"13"},{"size":877,"mtime":1609064395947,"results":"16","hashOfConfig":"13"},{"size":936,"mtime":1609064808083,"results":"17","hashOfConfig":"13"},{"size":1340,"mtime":1609064805855,"results":"18","hashOfConfig":"13"},{"size":938,"mtime":1609064764047,"results":"19","hashOfConfig":"13"},{"size":3910,"mtime":1609064747527,"results":"20","hashOfConfig":"13"},{"size":543,"mtime":1609064707667,"results":"21","hashOfConfig":"13"},{"size":680,"mtime":1609064395611,"results":"22","hashOfConfig":"13"},{"size":1033,"mtime":1609064395655,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"i6kd1j",{"filePath":"27","messages":"28","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"26"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"36","messages":"37","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/ec2-user/environment/reactJS/dabit3-postgram/src/index.js",[],["48","49"],"/home/ec2-user/environment/reactJS/dabit3-postgram/src/App.js",["50"],"import React, { useState, useEffect } from \"react\";\nimport {\n  HashRouter,\n  Switch,\n  Route\n} from \"react-router-dom\";\nimport { withAuthenticator, AmplifySignOut } from '@aws-amplify/ui-react';\nimport { css } from 'emotion';\nimport { API, Storage, Auth } from 'aws-amplify';\nimport { listPosts } from './graphql/queries';\n\nimport Posts from './Posts';\nimport Post from './Post';\nimport Header from './Header';\nimport CreatePost from './CreatePost';\nimport Button from './Button';\n\nfunction Router() {\n  /* create a couple of pieces of initial state */\n  const [showOverlay, updateOverlayVisibility] = useState(false);\n  const [posts, updatePosts] = useState([]);\n  const [myPosts, updateMyPosts] = useState([]);\n\n  /* fetch posts when component loads */\n  useEffect(() => {\n      fetchPosts();\n  }, []);\n  async function fetchPosts() {\n    /* query the API, ask for 100 items */\n    let postData = await API.graphql({ query: listPosts, variables: { limit: 100 }});\n    let postsArray = postData.data.listPosts.items;\n    /* map over the image keys in the posts array, get signed image URLs for each image */\n    postsArray = await Promise.all(postsArray.map(async post => {\n      const imageKey = await Storage.get(post.image);\n      post.image = imageKey;\n      return post;\n    }));\n    /* update the posts array in the local state */\n    setPostState(postsArray);\n  }\n  async function setPostState(postsArray) {\n    const user = await Auth.currentAuthenticatedUser();\n    const myPostData = postsArray.filter(p => p.owner === user.username);\n    console.log('postsArray:' , postsArray)\n    updateMyPosts(myPostData);\n    updatePosts(postsArray);\n  }\n  return (\n    <>\n      <HashRouter>\n          <div className={contentStyle}>\n            <Header />\n            <hr className={dividerStyle} />\n            <Button title=\"New Selfie\" onClick={() => updateOverlayVisibility(true)} />\n            <Switch>\n              <Route exact path=\"/\" >\n                <Posts posts={posts} />\n              </Route>\n              <Route path=\"/post/:id\" >\n                <Post />\n              </Route>\n              <Route exact path=\"/myposts\" >\n                <Posts posts={myPosts} />\n              </Route>\n            </Switch>\n          </div>\n          <AmplifySignOut />\n        </HashRouter>\n        { showOverlay && (\n          <CreatePost\n            updateOverlayVisibility={updateOverlayVisibility}\n            updatePosts={setPostState}\n            posts={posts}\n          />\n        )}\n    </>\n  );\n}\n\nconst dividerStyle = css`\n  margin-top: 15px;\n`\n\nconst contentStyle = css`\n  min-height: calc(100vh - 45px);\n  padding: 0px 40px;\n`\n\nexport default withAuthenticator(Router);","/home/ec2-user/environment/reactJS/dabit3-postgram/src/serviceWorker.js",[],"/home/ec2-user/environment/reactJS/dabit3-postgram/src/aws-exports.js",[],"/home/ec2-user/environment/reactJS/dabit3-postgram/src/Posts.js",[],"/home/ec2-user/environment/reactJS/dabit3-postgram/src/Post.js",["51"],"/home/ec2-user/environment/reactJS/dabit3-postgram/src/Header.js",[],"/home/ec2-user/environment/reactJS/dabit3-postgram/src/CreatePost.js",[],"/home/ec2-user/environment/reactJS/dabit3-postgram/src/Button.js",[],"/home/ec2-user/environment/reactJS/dabit3-postgram/src/graphql/queries.js",[],"/home/ec2-user/environment/reactJS/dabit3-postgram/src/graphql/mutations.js",[],{"ruleId":"52","replacedBy":"53"},{"ruleId":"54","replacedBy":"55"},{"ruleId":"56","severity":1,"message":"57","line":27,"column":6,"nodeType":"58","endLine":27,"endColumn":8,"suggestions":"59"},{"ruleId":"56","severity":1,"message":"60","line":13,"column":6,"nodeType":"58","endLine":13,"endColumn":8,"suggestions":"61"},"no-native-reassign",["62"],"no-negated-in-lhs",["63"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'fetchPosts'. Either include it or remove the dependency array.","ArrayExpression",["64"],"React Hook useEffect has a missing dependency: 'fetchPost'. Either include it or remove the dependency array.",["65"],"no-global-assign","no-unsafe-negation",{"desc":"66","fix":"67"},{"desc":"68","fix":"69"},"Update the dependencies array to be: [fetchPosts]",{"range":"70","text":"71"},"Update the dependencies array to be: [fetchPost]",{"range":"72","text":"73"},[800,802],"[fetchPosts]",[422,424],"[fetchPost]"]